name: "Docker Build/Push and Deploy to k8s"

# ## Doc ##
# This pipeline requires some secrets to be set on the repository.
# Secrets can be created under "Settings" on the repo, and then the sub-category "Secrets"
# These secrets needs to be named:
#    * registry_username - Containing ServicePrincipal ID (see: https://confluence.nrk.no/display/PLAT/Container+Registry#ContainerRegistry-TilgangfraCICD)
#    * registry_password - Containing ServicePrincipal Secret
#    * K8S_SA_SECRET     - Containing the whole secret object (yaml format) of the ServiceAccount GitHub Actions will use to deploy. (see: https://confluence.nrk.no/pages/viewpage.action?pageId=72122602 )
#

### Triggers ###
# Criterias that needs to be met to run this pipeline see https://docs.github.com/en/actions/reference/events-that-trigger-workflows
on:
  push:
    paths-ignore:
    - '**/docker-build-push-test.yaml'
    branches:
      - master
  pull_request:
    branches:
      - master
### Environment Variables ###
# Define some standard (and required) environment variables
env:
  # Registry hostname to use
  REGISTRY: {{CONTAINER_REGISTRY}}
  # Name of repository to use
  REPOSITORY: plattform
  # Name of image, preferably same as application name
  IMAGE_NAME: {{APP_NAME}}
  # URL to K8s API endpoint. you can find the endpoint on Confluence: https://confluence.nrk.no/display/PLAT/Liste+over+kubernetes+clustre+og+config
  K8S_API_URL: {{K8S_API}}
  # Namespace in K8s to do deployments
  K8S_NAMESPACE: {{NAMESPACE}}
  # Branch: this branch should be used as target directory when pushing the docker image upstream, so that the different pipelines push their images different places.
  BRANCH: master

### Jobs ###
# The jobs and steps to perform
# see https://docs.github.com/en/rest/reference/actions#workflow-jobs
# and https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions
jobs:
  # Build job
  build:
    # Make the pipeline run on latest ubuntu
    runs-on: ubuntu-latest
    steps:
      # Checkout repo code
      - uses: actions/checkout@v2
      # Log in to defined Registry to push to
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY }}
          username: ${{ secrets.registry_username }}
          password: ${{ secrets.registry_password }}
      # Build the image
      - name: Build
        run: |
          docker build --pull -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ env.BRANCH }}:${{ github.sha }} .
        shell: bash
      # Push image to repo on registry defined in env bracket
      - name: Push
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ env.BRANCH }}:${{ github.sha }}
        shell: bash
        # Only run this steps if all the above steps is successful
        if: ${{ success() }}
  # Deploy job
  deploy:
    # Make the job run on latest ubuntu
    runs-on: ubuntu-latest
    # Require this job to wait on success from build job before run
    needs: build
    steps:
    # Checkout repo code
    - uses: actions/checkout@v2
    # Set k8s context to use (cluster and so on)
    - uses: azure/k8s-set-context@v1
      with:
        method: service-account
        k8s-url: ${{ env.K8S_API_URL }}
        k8s-secret: ${{ secrets.K8S_SA_SECRET }}
      id: setcontext
    # Do the deploy on K8s cluster set in the above context
    - uses: Azure/k8s-deploy@v1
      with:
        namespace: ${{ env.K8S_NAMESPACE }}
        manifests: |
          manifests/master/deployment.yml
          manifests/master/service.yml
          manifests/master/ingress.yml
        images: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ env.BRANCH }}:${{ github.sha }}
      # Only run this steps if all the above steps is successful
      if: ${{ success() }}
